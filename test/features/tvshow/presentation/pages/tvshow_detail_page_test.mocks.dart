// Mocks generated by Mockito 5.0.16 from annotations
// in saeflix/test/features/tvshow/presentation/pages/tvshow_detail_page_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i11;
import 'dart:ui' as _i12;

import 'package:core/features/tvshow/domain/entities/tvshow.dart' as _i10;
import 'package:core/features/tvshow/domain/entities/tvshow_detail.dart' as _i7;
import 'package:core/features/tvshow/domain/usecases/get_tvshow_detail.dart'
    as _i2;
import 'package:core/features/tvshow/domain/usecases/get_tvshow_recommendation.dart'
    as _i3;
import 'package:core/features/tvshow/domain/usecases/get_tvshow_watchlist_status.dart'
    as _i4;
import 'package:core/features/tvshow/domain/usecases/remove_tvshow_watchlist.dart'
    as _i6;
import 'package:core/features/tvshow/domain/usecases/save_tvshow_watchlist.dart'
    as _i5;
import 'package:core/features/tvshow/presentation/provider/tvshow_detail_notifier.dart'
    as _i8;
import 'package:core/utils/state_enum.dart' as _i9;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeGetTvShowDetail_0 extends _i1.Fake implements _i2.GetTvShowDetail {}

class _FakeGetTvShowRecommendation_1 extends _i1.Fake
    implements _i3.GetTvShowRecommendation {}

class _FakeGetTvShowWatchListStatus_2 extends _i1.Fake
    implements _i4.GetTvShowWatchListStatus {}

class _FakeSaveTvShowWatchList_3 extends _i1.Fake
    implements _i5.SaveTvShowWatchList {}

class _FakeRemoveTvShowWatchList_4 extends _i1.Fake
    implements _i6.RemoveTvShowWatchList {}

class _FakeTvShowDetail_5 extends _i1.Fake implements _i7.TvShowDetail {}

/// A class which mocks [TvShowDetailNotifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvShowDetailNotifier extends _i1.Mock
    implements _i8.TvShowDetailNotifier {
  MockTvShowDetailNotifier() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.GetTvShowDetail get getTvShowDetail =>
      (super.noSuchMethod(Invocation.getter(#getTvShowDetail),
          returnValue: _FakeGetTvShowDetail_0()) as _i2.GetTvShowDetail);
  @override
  _i3.GetTvShowRecommendation get getTvShowRecommendation =>
      (super.noSuchMethod(Invocation.getter(#getTvShowRecommendation),
              returnValue: _FakeGetTvShowRecommendation_1())
          as _i3.GetTvShowRecommendation);
  @override
  _i4.GetTvShowWatchListStatus get getTvShowWatchListStatus =>
      (super.noSuchMethod(Invocation.getter(#getTvShowWatchListStatus),
              returnValue: _FakeGetTvShowWatchListStatus_2())
          as _i4.GetTvShowWatchListStatus);
  @override
  _i5.SaveTvShowWatchList get saveTvShowWatchList => (super.noSuchMethod(
      Invocation.getter(#saveTvShowWatchList),
      returnValue: _FakeSaveTvShowWatchList_3()) as _i5.SaveTvShowWatchList);
  @override
  _i6.RemoveTvShowWatchList get removeTvShowWatchList =>
      (super.noSuchMethod(Invocation.getter(#removeTvShowWatchList),
              returnValue: _FakeRemoveTvShowWatchList_4())
          as _i6.RemoveTvShowWatchList);
  @override
  _i7.TvShowDetail get tvshow => (super.noSuchMethod(Invocation.getter(#tvshow),
      returnValue: _FakeTvShowDetail_5()) as _i7.TvShowDetail);
  @override
  _i9.RequestState get tvshowState =>
      (super.noSuchMethod(Invocation.getter(#tvshowState),
          returnValue: _i9.RequestState.Empty) as _i9.RequestState);
  @override
  List<_i10.TvShow> get tvshowRecommendations =>
      (super.noSuchMethod(Invocation.getter(#tvshowRecommendations),
          returnValue: <_i10.TvShow>[]) as List<_i10.TvShow>);
  @override
  _i9.RequestState get tvshowRecommendationsState =>
      (super.noSuchMethod(Invocation.getter(#tvshowRecommendationsState),
          returnValue: _i9.RequestState.Empty) as _i9.RequestState);
  @override
  String get message =>
      (super.noSuchMethod(Invocation.getter(#message), returnValue: '')
          as String);
  @override
  bool get addToWatchlistStatus =>
      (super.noSuchMethod(Invocation.getter(#addToWatchlistStatus),
          returnValue: false) as bool);
  @override
  String get watchListmessage =>
      (super.noSuchMethod(Invocation.getter(#watchListmessage), returnValue: '')
          as String);
  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);
  @override
  _i11.Future<void> fetchTvShowDetail(int? id) => (super.noSuchMethod(
      Invocation.method(#fetchTvShowDetail, [id]),
      returnValue: Future<void>.value(),
      returnValueForMissingStub: Future<void>.value()) as _i11.Future<void>);
  @override
  _i11.Future<void> addWatchlist(_i7.TvShowDetail? tvshow) =>
      (super.noSuchMethod(Invocation.method(#addWatchlist, [tvshow]),
              returnValue: Future<void>.value(),
              returnValueForMissingStub: Future<void>.value())
          as _i11.Future<void>);
  @override
  _i11.Future<void> removeFromWatchlist(_i7.TvShowDetail? tvshow) =>
      (super.noSuchMethod(Invocation.method(#removeFromWatchlist, [tvshow]),
              returnValue: Future<void>.value(),
              returnValueForMissingStub: Future<void>.value())
          as _i11.Future<void>);
  @override
  _i11.Future<void> loadWatchlistStatus(int? id) => (super.noSuchMethod(
      Invocation.method(#loadWatchlistStatus, [id]),
      returnValue: Future<void>.value(),
      returnValueForMissingStub: Future<void>.value()) as _i11.Future<void>);
  @override
  void addListener(_i12.VoidCallback? listener) =>
      super.noSuchMethod(Invocation.method(#addListener, [listener]),
          returnValueForMissingStub: null);
  @override
  void removeListener(_i12.VoidCallback? listener) =>
      super.noSuchMethod(Invocation.method(#removeListener, [listener]),
          returnValueForMissingStub: null);
  @override
  void dispose() => super.noSuchMethod(Invocation.method(#dispose, []),
      returnValueForMissingStub: null);
  @override
  void notifyListeners() =>
      super.noSuchMethod(Invocation.method(#notifyListeners, []),
          returnValueForMissingStub: null);
  @override
  String toString() => super.toString();
}
